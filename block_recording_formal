#include <pcmConfig.h>

#include <SD.h>
//#define SD_ChimpSelectPin 10
#include <TMRpcm.h>
#include <SPI.h>
#include "pitches.h"

/* 
For the original prototype, it's 
#define Pin_Record 3
#define Pin_Play_In 2//Start to play
I changed the pin arrangement here for clearer schematic.
*/

#define Pin_Record 2
#define Pin_Play_In 3//Start to play

#define Pin_Loop_In 4// Loop or not?
#define Pin_Play_Out 5 //play signal out
#define Pin_Loop_Out 6 //Loop signal out


TMRpcm audio;

volatile byte FLAG_PLAY = LOW;
volatile byte FLAG_RECORD = LOW;

void Flag_PlaytoHigh( )
{
  FLAG_PLAY = HIGH;
}
void Flag_RecordtoHigh( )
{
  FLAG_RECORD = HIGH;
}

void setup(){

  pinMode(Pin_Play_In,INPUT);
  pinMode(Pin_Loop_In,INPUT);
  pinMode(Pin_Record,INPUT);
  pinMode(Pin_Play_Out,OUTPUT);
  pinMode(Pin_Loop_Out,OUTPUT);

attachInterrupt(digitalPinToInterrupt(Pin_Record), Flag_RecordtoHigh, CHANGE);
attachInterrupt(digitalPinToInterrupt(Pin_Play_In), Flag_PlaytoHigh, RISING);

audio.speakerPin = 9;
Serial.begin(9600);
if (!SD.begin(10))//SD_ChipSelectPin))
{
      tone(9,NOTE_D4);
    delay(400);
      noTone(9);
        tone(9,NOTE_D4);
    delay(400);
      noTone(9);
        tone(9,NOTE_D4);
    delay(400);
      noTone(9);
Serial.println("SD fail");
return;
}
else
{
  Serial.println("SD Ready");
    tone(9,NOTE_D4);
    delay(400);
    tone(9,NOTE_G4);
    delay(400);
    tone(9,NOTE_A4);
    delay(400);   
    tone(9,NOTE_C5);
    delay(400);    
    tone(9,NOTE_A4);
    delay(400);    
    tone(9,NOTE_G4);
    delay(400);
    noTone(9);
  }

audio.setVolume(5);
audio.CSPin = 10;//SD_ChipSelectPin;
//pinMode(7, OUTPUT);//for microphone power supply
  delay(1000);
//audio.play("8.wav");
    digitalWrite(Pin_Play_Out, LOW);
    digitalWrite(Pin_Loop_Out, LOW);
}

void loop(){  

       if(audio.isPlaying() == 0){
        digitalWrite(9, LOW);
       }

    if (FLAG_RECORD == HIGH)
{
    FLAG_RECORD = LOW;
  if (digitalRead(Pin_Record) == HIGH)
  {
   // audio.pause();   
    tone(9,NOTE_A4);
    audio.startRecording("rec.wav",9000,A0);
    //delay(600); 
    noTone(9); 
  //  delay(300);
    

   // digitalWrite(9, LOW);

  //  audio.startRecording("rec.wav",9000,A0);   //Record at 16khz sample rate on pin A0
    //delay(600);
        
  }
  if (digitalRead(Pin_Record) == LOW)
  {

    audio.stopRecording("rec.wav");
    delay(600);
    tone(9,NOTE_C4);
    delay(300); 
   /*        if(audio.isPlaying() == 0)
       {
          audio.pause(); 
       }
       */
    noTone(9); 
  //  delay(600);
 // audio.play("rec.wav");

  }   
}
 
  //play recording
  if( (FLAG_PLAY == HIGH)&&(digitalRead(Pin_Play_In) == HIGH))
  {
      audio.stopRecording("rec.wav");
      delay(500);   
     digitalWrite(Pin_Loop_Out, digitalRead(Pin_Loop_In));
     audio.play("rec.wav");
     FLAG_PLAY = LOW;
    // delay(600);
  } /*
  else
  {   
    digitalWrite(Pin_Play_Out, LOW);
    digitalWrite(Pin_Loop_Out, LOW);
    FLAG_PLAY = LOW;   
  }
  */
     if(audio.isPlaying() == 1){
       delay(5);
      if(audio.isPlaying() == 0){
        audio.disable();       //    disables the timer on output pin and stops the music
      // FLAG_PLAY = LOW; 
     // delay(600);
      digitalWrite(Pin_Play_Out, HIGH);
      delay(300);
      digitalWrite(Pin_Play_Out, LOW); 
     }
     }

}
